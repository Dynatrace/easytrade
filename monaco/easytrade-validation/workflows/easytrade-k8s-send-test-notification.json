{
  "description": "",
  "isPrivate": false,
  "ownerType": "USER",
  "schemaVersion": 3,
  "taskDefaults": {},
  "tasks": {
    "mention-on-fail": {
      "action": "dynatrace.slack:slack-send-message",
      "conditions": {
        "custom": "{{`{{`}} result(\"preprocess\").sendFailNotification{{`}}`}}",
        "else": "SKIP",
        "states": {
          "preprocess": "OK"
        }
      },
      "description": "Send a message to a Slack workspace",
      "input": {
        "appendToThread": false,
        "attachmentToggleValue": "none",
        "channel": "{{ .channel_id }}",
        "channelType": "id",
        "connection": "{{ .slack_connection_id }}",
        "executionDate": "{{`{{`}} execution().started_at {{`}}`}}",
        "executionID": "{{`{{`}} execution().id {{`}}`}}",
        "message": "Hey there \u003c!here\u003e, it seems there were some problems with validations ...",
        "reaction": [],
        "selectedRequestType": 0,
        "workflowID": "{{`{{`}} execution().workflow.id {{`}}`}}"
      },
      "name": "mention-on-fail",
      "position": {
        "x": 0,
        "y": 2
      },
      "predecessors": ["preprocess"]
    },
    "preprocess": {
      "action": "dynatrace.automations:run-javascript",
      "description": "Build a custom task running js Code",
      "input": {
        "script": "{{ .workflowCode }}"
      },
      "name": "preprocess",
      "position": {
        "x": 0,
        "y": 1
      },
      "predecessors": []
    },
    "send-notification": {
      "action": "dynatrace.slack:slack-send-message",
      "conditions": {
        "custom": "",
        "states": {
          "mention-on-fail": "OK"
        }
      },
      "description": "Send a message to a Slack workspace",
      "input": {
        "appendToThread": false,
        "attachmentToggleValue": "none",
        "channel": "{{ .channel_id }}",
        "channelType": "id",
        "connection": "{{ .slack_connection_id }}",
        "executionDate": "{{`{{`}} execution().started_at {{`}}`}}",
        "executionID": "{{`{{`}} execution().id {{`}}`}}",
        "message": "*Environment*: \u003c{{`{{`}} result(\"preprocess\").tenantUrl {{`}}`}}|{{`{{`}} result(\"preprocess\").tenantId {{`}}`}}\u003e\n*Trigger*: _{{`{{`}} event()[\"event.provider\"] {{`}}`}}_\n*Application*: _easytrade-k8s_\n*Result*: :{{`{{`}} result(\"preprocess\").resultIcon {{`}}`}}: *{{`{{`}} result(\"preprocess\").result {{`}}`}}* :{{`{{`}} result(\"preprocess\").resultIcon {{`}}`}}:\n*Details*:\n{% for detail in result(\"preprocess\").details %}\n- *{{`{{`}} detail.name {{`}}`}}*: :{{`{{`}} detail.resultIcon {{`}}`}}: \u003c{{`{{`}} detail.validationUrl {{`}}`}}|{{`{{`}} detail.result {{`}}`}}\u003e :{{`{{`}} detail.resultIcon {{`}}`}}:\n{% endfor %}\n*DQL* to get result bizevent:\n```\nfetch bizevents\n| filter event.type == \"workflows.validation.result\" AND event.id == \"{{`{{`}} event()[\"event.id\"] {{`}}`}}\"\n```",
        "reaction": [],
        "selectedRequestType": 0,
        "workflowID": "{{`{{`}} execution().workflow.id {{`}}`}}"
      },
      "name": "send-notification",
      "position": {
        "x": 0,
        "y": 3
      },
      "predecessors": ["mention-on-fail"]
    }
  },
  "title": "{{ .name }}",
  "trigger": {
    "eventTrigger": {
      "filterQuery": "event.type == \"demoability.validation.result\" AND tags.application == \"easytrade-k8s\"",
      "isActive": true,
      "triggerConfiguration": {
        "type": "event",
        "value": {
          "eventType": "bizevents",
          "query": "event.type == \"demoability.validation.result\" AND tags.application == \"easytrade-k8s\""
        }
      },
      "uniqueExpression": null
    }
  },
  "triggerType": "Event",
  "usages": []
}
